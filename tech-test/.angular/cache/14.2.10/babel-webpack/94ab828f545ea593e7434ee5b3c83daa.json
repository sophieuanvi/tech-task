{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MAT_DATE_FORMATS } from \"@angular/material/core\";\nimport * as _moment from \"moment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/select\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"@angular/cdk/text-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/datepicker\";\nexport const MY_DATE_FORMATS = {\n  parse: {\n    dateInput: \"DD/MM/YYYY\"\n  },\n  display: {\n    dateInput: \"DD/MM/YYYY\",\n    monthYearLabel: \"MMMM YYYY\",\n    dateA11yLabel: \"LL\",\n    monthYearA11yLabel: \"MMMM YYYY\"\n  }\n};\nexport let TaskModalComponent = /*#__PURE__*/(() => {\n  class TaskModalComponent {\n    constructor(dialogRef, data) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.reqErrorText = \"This field is required!\";\n    }\n\n    ngOnInit() {\n      this.initForm();\n    }\n\n    createForm() {\n      this.taskForm = new FormGroup({\n        id: new FormControl(\"\"),\n        label: new FormControl(\"\", Validators.required),\n        category: new FormControl(\"\", Validators.required),\n        done: new FormControl(new Date()),\n        description: new FormControl(\"\", Validators.required)\n      });\n    }\n\n    initForm() {\n      this.createForm();\n      this.taskForm.setValue({\n        id: this.data.todo.id,\n        label: this.data.todo.label,\n        category: this.data.todo.category,\n        done: this.data.todo.done ? _moment(\"11-22-2020\", \"MM/DD/YYYY\") : new Date(),\n        description: this.data.todo.description\n      });\n      console.log(_moment(this.data.todo.done, \"DD/MM/YYYY\"), this.data.todo.done);\n    }\n\n  }\n\n  TaskModalComponent.ɵfac = function TaskModalComponent_Factory(t) {\n    return new (t || TaskModalComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  TaskModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskModalComponent,\n    selectors: [[\"app-task-modal\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_DATE_FORMATS,\n      useValue: MY_DATE_FORMATS\n    }])],\n    decls: 24,\n    vars: 3,\n    consts: [[3, \"formGroup\"], [\"appearance\", \"outline\", 1, \"field\"], [\"matInput\", \"\", \"formControlName\", \"label\"], [\"formControlName\", \"category\"], [\"value\", \"house\"], [\"value\", \"bureaucracy\"], [\"matInput\", \"\", \"cdkTextareaAutosize\", \"\", \"cdkAutosizeMinRows\", \"4\", \"cdkAutosizeMaxRows\", \"8\", \"formControlName\", \"description\"], [\"appearance\", \"outline\", 1, \"date\"], [\"matInput\", \"\", \"formControlName\", \"done\", 3, \"matDatepicker\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"]],\n    template: function TaskModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-form-field\", 1)(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Label\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-form-field\", 1)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-select\", 3)(9, \"mat-option\", 4);\n        i0.ɵɵtext(10, \"House\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-option\", 5);\n        i0.ɵɵtext(12, \"Bureaucracy\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"mat-form-field\", 1)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"textarea\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-form-field\", 7)(18, \"mat-label\");\n        i0.ɵɵtext(19, \"Done\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 8)(21, \"mat-datepicker-toggle\", 9)(22, \"mat-datepicker\", null, 10);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(23);\n\n        i0.ɵɵproperty(\"formGroup\", ctx.taskForm);\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"matDatepicker\", _r0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r0);\n      }\n    },\n    dependencies: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.MatFormField, i3.MatLabel, i4.MatSelect, i5.MatOption, i6.CdkTextareaAutosize, i7.MatInput, i8.MatDatepicker, i8.MatDatepickerInput, i8.MatDatepickerToggle],\n    styles: [\".field[_ngcontent-%COMP%]{width:400px}\"]\n  });\n  return TaskModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}