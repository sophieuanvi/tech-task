{"ast":null,"code":"import { TaskModalComponent } from \"./task-modal/task-modal.component\";\nimport { filter, finalize } from \"rxjs/operators\";\nimport { DeleteDialogComponent } from \"../../../components/shared/delete-dialog/delete-dialog.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../../../services/task.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/button\";\n\nfunction TaskComponent_td_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.todo.done);\n  }\n}\n\nfunction TaskComponent_ng_template_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"Task dont Done yet!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let TaskComponent = /*#__PURE__*/(() => {\n  class TaskComponent {\n    constructor(dialog, taskService) {\n      this.dialog = dialog;\n      this.taskService = taskService;\n      this.edit = false;\n    }\n\n    ngOnInit() {}\n\n    onEdit() {\n      this.edit = !this.edit;\n    }\n\n    openDialog($event) {\n      const dialogRef = this.dialog.open(TaskModalComponent, {\n        width: \"450px\",\n        data: {\n          todo: this.todo\n        }\n      });\n      dialogRef.afterClosed().pipe(filter(response => response), finalize(() => {})).subscribe(() => {\n        this.taskService.taskListUpdate.next(true);\n      });\n      $event.preventDefault();\n    }\n\n    deleteTask($event) {\n      const dialogRef = this.dialog.open(DeleteDialogComponent, {\n        width: \"450px\",\n        data: {\n          title: \"Delete Task\",\n          text: `Are you sure you want to delete  task ${this.todo.label}?`\n        }\n      });\n      dialogRef.afterClosed().pipe(filter(response => response), finalize(() => {})).subscribe(() => {\n        this.taskService.deleteTask(this.todo.id);\n        this.taskService.taskListUpdate.next(true);\n      });\n      $event.preventDefault();\n    }\n\n  }\n\n  TaskComponent.ɵfac = function TaskComponent_Factory(t) {\n    return new (t || TaskComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.TaskService));\n  };\n\n  TaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskComponent,\n    selectors: [[\"app-task\"]],\n    inputs: {\n      todo: \"todo\"\n    },\n    decls: 31,\n    vars: 5,\n    consts: [[1, \"example-card\"], [1, \"actions\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", 3, \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"done\", \"\"]],\n    template: function TaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-content\")(2, \"div\", 1)(3, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function TaskComponent_Template_button_click_3_listener($event) {\n          return ctx.openDialog($event);\n        });\n        i0.ɵɵelementStart(4, \"mat-icon\");\n        i0.ɵɵtext(5, \"edit\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function TaskComponent_Template_button_click_6_listener($event) {\n          return ctx.deleteTask($event);\n        });\n        i0.ɵɵelementStart(7, \"mat-icon\");\n        i0.ɵɵtext(8, \"delete\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"table\")(10, \"tr\")(11, \"th\");\n        i0.ɵɵtext(12, \"Label\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"td\");\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"tr\")(16, \"th\");\n        i0.ɵɵtext(17, \"Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"td\");\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"tr\")(21, \"th\");\n        i0.ɵɵtext(22, \"Done\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, TaskComponent_td_23_Template, 2, 1, \"td\", 4);\n        i0.ɵɵtemplate(24, TaskComponent_ng_template_24_Template, 2, 0, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"tr\")(27, \"th\");\n        i0.ɵɵtext(28, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"td\");\n        i0.ɵɵtext(30);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(25);\n\n        i0.ɵɵadvance(14);\n        i0.ɵɵtextInterpolate(ctx.todo.label);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.todo.category);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", !!ctx.todo.done)(\"ngIfElse\", _r1);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(ctx.todo.description);\n      }\n    },\n    dependencies: [i3.NgIf, i4.MatCard, i4.MatCardContent, i5.MatIcon, i6.MatButton],\n    styles: [\".example-card[_ngcontent-%COMP%]{max-width:400px;height:200px}table[_ngcontent-%COMP%]{border-collapse:separate;border-spacing:0 1em}table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{display:block;width:100px;text-align:start}.actions[_ngcontent-%COMP%]{text-align:end}\"]\n  });\n  return TaskComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}